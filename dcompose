#!/usr/bin/env node
"use strict";

var common      = require('./common'),
    fs          = require('fs'),
    optimist    = require('optimist')
      .usage('Usage: dcompose [options] entry')
      .check(function(argv) {
        if (argv._.length === 0) throw new Error('provide entry');
      })
      .option('h', {
        alias: 'help',
        boolean: true,
        describe: 'Show this message and exit'
      })
      .option('d', {
        alias: 'debug',
        describe: 'Emit source maps'
      })
      .option('o', {
        alias: 'output',
        describe: 'Set output directory'
      })
      .option('js', {
        describe: 'Bundle JS dependencies only',
        boolean: true
      })
      .option('css', {
        boolean: true,
        describe: 'Bundle CSS dependencies only'
      })
      .option('t', {
        alias: 'transform',
        describe: 'Apply transform'
      })
      .option('global-transform', {
        describe: 'Apply global transform'
      })
      .option('extension', {
        describe: 'File extensions to treat as modules [default: .js]'
      })

function pipe(a, b) {
  a.on('error', function(err) {
    console.warn('error: ', err);
    process.exit(1);
  });
  a.pipe(b);
}

var argv = optimist.argv;
argv.globalTransform = argv['global-transform'];

if (argv.help)
  return optimist.showHelp();

var Composer = require('./index');

var composer = new Composer(argv._, {
  transform: [].concat(argv.t).concat(argv.transform).filter(Boolean),
  extensions: [].concat(argv.extension).filter(Boolean),
  debug: argv.debug
});

var output = argv.output || argv.o;

var out = output ? fs.createWriteStream(output) : process.stdout;
if (argv.js)
  pipe(composer.bundleJS(), out)
else if (argv.css)
  pipe(composer.bundleCSS(), out)
else
  pipe(composer.bundle(), out);
